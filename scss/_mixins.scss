@mixin hide-text {
	text-align: left;
	text-indent: -9999px;
	overflow: hidden;
}

@mixin clearfix {
	&:after {
		content: '';
		display: block;
		clear: both;
	}
}

@mixin box-sizing($type: border-box) {
	@include prefix('box-sizing', $type);
}

@mixin center() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

@mixin bg-cover($position: 50% 50%) {
	background-size: cover;
	background-position: $position;
}

@mixin prefix($property, $value, $vendors: webkit moz ms o) {
	@if $vendors {
		@each $vendor in $vendors {
			#{"-" + $vendor + "-" + $property}: #{$value};
		}
	}
	#{$property}: #{$value};
}

@mixin box-shadow($param) {
	@include prefix('box-shadow', $param);
}

@mixin transition($properties...) {
	@if length($properties) >= 1 {
		@include prefix('transition', $properties);
	}
	@else {
		@include prefix('transition', all ease 0.3s);
	}
}

@mixin transform($param...) {
	@include prefix('transform', $param);
}

@mixin blank-text {
	font-size: 0;
	line-height: 0;
	font-family: $adobe-blank;
}

@mixin responsive-image {
	display: block;
	width: 100%;
	max-width: 100%;
}

@mixin gradientLeniar($top,$bottom){
	background: $top;
	background: -moz-linear-gradient(top, $top 0%, $bottom 100%);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom));
	background: -webkit-linear-gradient(top, $top 0%,$bottom 100%);
	background: -o-linear-gradient(top, $top 0%,$bottom 100%);
	background: -ms-linear-gradient(top, $top 0%,$bottom 100%);
	background: linear-gradient(top, $top 0%,$bottom 100%);
	-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$top}', EndColorStr='#{$bottom}')";
}

@mixin placeholder-color($color){
	&::-webkit-input-placeholder {
		color: $color;
	}
	&::-moz-placeholder {
		color: $color;
		opacity: 1;
	}
	&:-ms-input-placeholder {
		color: $color;
	}
}

@mixin singleLine {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

@mixin position-side {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}

@mixin arrow($direction, $color, $size-transparent, $size){
	display: block;
	height: 0;
	width: 0;
	
	@if $direction == 'top' {
		border-left: $size-transparent solid transparent;
		border-right: $size-transparent solid transparent;
		border-bottom: $size solid $color;
	} @else if $direction == 'right' {
		border-top: $size-transparent solid transparent;
		border-bottom: $size-transparent solid transparent;
		border-left: $size solid $color;
	} @else if $direction == 'bottom' {
		border-top: $size solid $color;
		border-right: $size-transparent solid transparent;
		border-left: $size-transparent solid transparent;
	} @else if $direction == 'left' {
		border-top: $size-transparent solid transparent;
		border-right: $size solid $color;
		border-bottom: $size-transparent solid transparent;
	} @else if $direction == 'top-left' {
		border-top: $size solid $color;
		border-right: $size-transparent solid transparent;
	} @else if $direction == 'top-right' {
		border-top: $size solid $color;
		border-left: $size-transparent solid transparent;
	} @else if $direction == 'bottom-left' {
		border-bottom: $size solid $color;
		border-right: $size-transparent solid transparent;
	} @else if $direction == 'bottom-right' {
		border-bottom: $size solid $color;
		border-left: $size-transparent solid transparent;
	}
}

@mixin breakpoint($class) {
	@if $class == mobile {
		@media screen and (max-width: $mobile),
		screen and (orientation: landscape) and (max-width: $mobile),
		screen and (orientation: portrait ) and (max-width: $mobile) { @content; }
	}
	@else if $class == mobile-xs {
		@media screen and (max-width: $mobile-xs) { @content; }
	}
	@else if $class == desktop-md {
		@media screen and (max-width: $desktop-md) { @content; }
	}
	@else if $class == tablet {
		@media screen and (max-width: $tablet) { @content; }
	}
	@else if $class == nomobile {
		@media screen and (min-width: $mobile-gt) { @content; }
	}
	@else if $class == gt-tablet {
		@media screen and (min-width: $tablet + 1) { @content; }
	}
}

@mixin placeholder-aligment($aligment) {
	&::-webkit-input-placeholder {
		text-align: $aligment;
	}
	&::-moz-placeholder {
		text-align: $aligment;
	}
	&:-ms-input-placeholder {
		text-align: $aligment;
	}
}

@mixin tbl-block {
	display: table;
	width: 100%;
	table-layout: fixed;
}